def toeplitz(matrix):

	m, n = len(matrix), len(matrix[0])

	if m == 1 or n == 1:  return True

	# feed = first element of each diagonal

	feed = [matrix[i][0] for i in range(m-2,0,-1)] + matrix[0][:-1]#;  print();  print('feed:', feed);  print();
	
	diagonals = []

	# subr = sub_matrix based on row

	for a in range(m-2,0,-1):

		subr = [[matrix[i][j] for j in range(n)] for i in range(a,m)]

		diagonals += [[subr[i][j] for j in range(n) for i in range(len(subr)) if i == j]]

	# subc = sub_matrix based on column

	for b in range(n-1):

		subc = [[matrix[i][j] for j in range(b,n)] for i in range(m)]

		diagonals += [[subc[i][j] for j in range(len(subc[0])) for i in range(m) if i == j]]

	t = len(feed);  comparisons = []

	for i in range(t):  comparisons.append(all(feed[i] == x for x in diagonals[i]))

	return all(comp == True for comp in comparisons)

# from random import randint as a;  m, n = a(1,5), a(1,5);  print(m,'x', n);  matrix = [[a(10,99) for j in range(n)] for i in range(m)]

# for i in range(m):  print(i, matrix[i])

matrix = [
[1,2,4],
[3,1,2],
[1,3,1],
]

print(toeplitz(matrix))
